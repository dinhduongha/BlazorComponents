!function(e){var t={};function r(o){if(t[o])return t[o].exports;var n=t[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=t,r.d=function(e,t,o){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(o,n,function(t){return e[t]}.bind(null,n));return o},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=2)}([function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=r(1);t.Suggestbox=class{constructor(){this.registeredSuggestboxes=new Map,this.unregisterSuggestBox=(e=>{this.registeredSuggestboxes.delete(e)}),this.initSuggestBox=((e,t)=>(this.registeredSuggestboxes.set(t,e),$(`#${t}`).keydown(e=>{!$(e.target.parentNode.parentNode).hasClass("-open")||"ArrowDown"!==e.key&&"ArrowUp"!==e.key||e.preventDefault(),"ArrowDown"!==e.key&&"ArrowUp"!==e.key&&"Enter"!==e.key&&"Escape"!==e.key&&"Tab"!==e.key&&e.stopPropagation()}),1)),this.clearSelection=(e=>{for(var[t,r]of this.registeredSuggestboxes){const n=$(`#${t}`);if(o.Helpers.senseClickOutside($(e.target),n))return void r.invokeMethodAsync("ClearSelection")}})}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});class o{static focusById(e){return $(`#${e}`).focus(),1}static senseClickOutside(e,t){return 0===e.closest(t).length}static removeEmpty(e){return Object.keys(e).forEach(t=>e[t]&&"object"==typeof e[t]&&o.removeEmpty(e[t])||!e[t]&&(void 0===e[t]||null===e[t])&&delete e[t]),e}static genericFunction(e){return[window].concat(e.split(".")).reduce(function(e,t){return e[t]})}}t.Helpers=o},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=r(0);var n;!function(e){e.suggestbox=new o.Suggestbox}(n||(n={})),window.rpedrettiBlazorComponents=n,$(document).on("click",n.suggestbox.clearSelection)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,